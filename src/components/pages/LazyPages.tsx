'use client';\n\nimport React, { Suspense } from 'react';\nimport { LoadingState } from '@/components/ui/loading-state';\n\n// Lazy load page components for route-level code splitting\nexport const LazyAlbumPage = React.lazy(() => \n  import('@/app/albums/[id]/page').then(module => ({ default: module.default }))\n);\n\nexport const LazyLibraryPage = React.lazy(() => \n  import('@/app/library/page').then(module => ({ default: module.default }))\n);\n\nexport const LazyBlogPage = React.lazy(() => \n  import('@/app/blog/page').then(module => ({ default: module.default }))\n);\n\nexport const LazyCreateAlbumPage = React.lazy(() => \n  import('@/app/create-album/page').then(module => ({ default: module.default }))\n);\n\nexport const LazyLikedPage = React.lazy(() => \n  import('@/app/liked/page').then(module => ({ default: module.default }))\n);\n\n// Page wrapper components with appropriate loading states\ninterface PageWrapperProps {\n  children: React.ReactNode;\n  loadingType?: 'spinner' | 'skeleton' | 'card' | 'list' | 'blog';\n  loadingCount?: number;\n}\n\nconst PageWrapper = ({ \n  children, \n  loadingType = 'skeleton',\n  loadingCount = 3 \n}: PageWrapperProps) => (\n  <Suspense fallback={<LoadingState count={loadingCount} type={loadingType} />}>\n    {children}\n  </Suspense>\n);\n\n// Specific page wrappers with appropriate loading states\nexport const AlbumPageWrapper = ({ children }: { children: React.ReactNode }) => (\n  <PageWrapper loadingType=\"card\" loadingCount={1}>\n    {children}\n  </PageWrapper>\n);\n\nexport const LibraryPageWrapper = ({ children }: { children: React.ReactNode }) => (\n  <PageWrapper loadingType=\"card\" loadingCount={6}>\n    {children}\n  </PageWrapper>\n);\n\nexport const BlogPageWrapper = ({ children }: { children: React.ReactNode }) => (\n  <PageWrapper loadingType=\"blog\" loadingCount={4}>\n    {children}\n  </PageWrapper>\n);\n\nexport const CreateAlbumPageWrapper = ({ children }: { children: React.ReactNode }) => (\n  <PageWrapper loadingType=\"skeleton\" loadingCount={5}>\n    {children}\n  </PageWrapper>\n);\n\nexport const LikedPageWrapper = ({ children }: { children: React.ReactNode }) => (\n  <PageWrapper loadingType=\"list\" loadingCount={8}>\n    {children}\n  </PageWrapper>\n);\n"